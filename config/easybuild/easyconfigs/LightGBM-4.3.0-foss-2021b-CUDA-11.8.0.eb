easyblock = 'CMakeMake'

name = 'LightGBM'
version = '4.3.0'
versionsuffix = '-CUDA-%(cudaver)s'

local_fast_double_parser_version = '0.7.0'
local_fmt_version = '10.2.1'

homepage = 'https://lightgbm.readthedocs.io'
description = """LightGBM is a gradient boosting framework that uses tree based learning algorithms.
It is designed to be distributed and efficient with the following advantages:
. Faster training speed and higher efficiency.
. Lower memory usage.
. Better accuracy.
. Support of parallel, distributed, and GPU learning.
. Capable of handling large-scale data.
"""

# This project is licensed under the terms of the MIT license.
#software_license = 'LicenseMIT'
software_license_urls = ['https://github.com/microsoft/LightGBM/blob/master/LICENSE']

sources = [
    {
        'source_urls': ['https://github.com/microsoft/LightGBM/archive/refs/tags'],
        'download_filename': 'v%(version)s.tar.gz',
	'filename': '%(name)s-%(version)s.tar.gz',
    },
    {
        'source_urls': ['https://github.com/lemire/fast_double_parser/archive/refs/tags'],
	'download_filename': 'v%s.tar.gz' % local_fast_double_parser_version,
	'filename': 'double_parser-%s.tar.gz' % local_fast_double_parser_version,
    },
    {
        'source_urls': ['https://github.com/fmtlib/fmt/archive/refs/tags'],
        'download_filename': '%s.tar.gz' % local_fmt_version,
	'filename': 'fmt-%s.tar.gz' % local_fmt_version,
    },
]

checksums = [
    '9e5a88bc231addfe4a0e57aa5ceb157f045103cd69ad8c2f393ef941ef52a9ac', #  lightgbm-4.3.0.tar.gz
    'eb80a1d9c406bbe8cb22fffd3c007651f716abd03225009302d8aba8e9c4df77', #  fast_double_parser-0.7.0.tar.gz
    '1250e4cc58bf06ee631567523f48848dc4596133e163f02615c97f78bab6c811', #  fmt-10.2.1.tar.gz
]

toolchain = {'name': 'foss', 'version': '2021b'}
toolchainopts = {'usempi': True}

builddependencies = [
    ('CMake', '3.21.1'),
    ('pkg-config', '0.29.2'),
    ('scikit-build', '0.15.0'),
    ('scikit_build_core', '0.8.1'),
]

dependencies = [
    ('Python', '3.9.6'),
    ('Boost', '1.77.0'),
    ('Eigen', '3.4.0'),
    ('CUDA', '11.8.0'),
    # Python module dependencies:
    ('dask', '2022.1.0'),
    ('Ninja', '1.10.2'),
    ('SciPy-bundle', '2021.10'), # for pandas version 1.3.4
    ('scikit-learn', '1.0.2'),
]

local_library_links = 'ln -s "%%(builddir)s/fast_double_parser-%s/include" "%%(builddir)s/LightGBM-%%(version)s/external_libs/fast_double_parser/include" && ' % local_fast_double_parser_version
local_library_links += 'ln -s "%%(builddir)s/fmt-%s/include" "%%(builddir)s/LightGBM-%%(version)s/external_libs/fmt/include" && ' % local_fmt_version
local_library_links += 'ln -s "${EBROOTEIGEN}/include" "%(builddir)s/LightGBM-%(version)s/external_libs/eigen/include" && '
local_library_links += 'ls -l %(builddir)s/LightGBM-%(version)s/external_libs/* && '

preconfigopts = local_library_links

configopts = '-DUSE_MPI=ON '
configopts += '-DUSE_GPU=1 -DOpenCL_LIBRARY="${EBROOTCUDA}/lib/libOpenCL.so" -DOpenCL_INCLUDE_DIR="${EBROOTCUDA}/include/" '
configopts += '-D__INTEGRATE_OPENCL:BOOL=ON '
#configopts += '-D__BUILD_FOR_PYTHON:BOOL=ON '
#configopts += '-D__BUILD_FOR_R:BOOL=ON '

exts_defaultclass = 'PythonPackage'
exts_default_options = {
    'source_urls': [PYPI_SOURCE],
    'use_pip': True,
    'download_dep_fail': True,
    'sanity_pip_check': True,
#    'runtest': True,
}
exts_list = [
    ('pyproject-metadata', '0.7.1', {
        'checksums': ['0a94f18b108b9b21f3a26a3d541f056c34edcb17dc872a144a15618fed7aef67'],
    }),
    ('lightgbm', version, {
        'preinstallopts': 'export PYTHONPATH="%(installdir)s/lib/python%(pyshortver)s/site-packages:${PYTHONPATH}" && ',
        'checksums': ['006f5784a9bcee43e5a7e943dc4f02de1ba2ee7a7af1ee5f190d383f3b6c9ebe'],
    }),
]

sanity_check_paths = {
    'files': ['bin/lightgbm', 'lib/lib_lightgbm.so'],
    'dirs': ['include/LightGBM'],
}

modextrapaths = {
    'PYTHONPATH': 'lib/python%(pyshortver)s/site-packages',
}

moduleclass = 'lib'
